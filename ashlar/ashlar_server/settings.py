"""
Django settings for ashlar_server project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Retrieve secret variables from the environment, defined in the .env file.
SECRET_KEY = os.environ.get('SECRET_KEY', 'extra-secret')

# Check for allowed hosts, defined as a comma-separated bash string in the
# .env file.
ALLOWED_HOSTS = os.environ.get('ALLOWED_HOSTS', '').split(',')

# DEBUG and DEVELOP default to false. They should be represented as Pythonic
# booleans in the .env file (i.e. caps first), but allow them to be lower case just
# in case.
DEBUG = False
if os.environ.get('DEBUG') and os.environ.get('DEBUG').lower() == 'true':
    DEBUG = True

DEVELOP = False
if os.environ.get('DEVELOP') and os.environ.get('DEVELOP').lower() == 'true':
    DEVELOP = True

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'django_extensions',
    'ashlar',
    'ashlar_server',
    'corsheaders',
)

MIDDLEWARE_CLASSES = (
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'ashlar_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Default database variables correspond to the development database set up
# in docker-compose.yml
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': os.environ.get('DB_NAME', 'postgres'),
        'USER': os.environ.get('DB_USER', 'postgres'),
        'HOST': os.environ.get('DB_HOST', 'db'),
        'PASSWORD': os.environ.get('DB_PASS', ''),
        'PORT': os.environ.get('DB_PORT', '5432')
    }
}

WSGI_APPLICATION = 'ashlar_server.wsgi.application'

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# Ashlar-specific global variables
ASHLAR = { 'SRID': 4326 }

# Allow CORS requests from any port on the loopback interface
CORS_ORIGIN_REGEX_WHITELIST = (
    r'^http://127.0.0.1:\d+',
)
