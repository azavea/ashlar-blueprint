#!/bin/bash

# Most reliable way to get the path for this script.
# h/t: https://stackoverflow.com/questions/192292/bash-how-best-to-include-other-scripts/12694189#12694189
DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]];
then
    DIR="$PWD"
fi

# Load common configs for this script.
source "${DIR}/_config.sh"

function usage() {
    echo -n "Usage: $(basename "$0") [OPTION]
Run linters and tests.
Options:
    -h --help       Display this help text
    git             Check git commit titles
    editor          Run tests for the schema editor app
    build           Make sure that containers build successfully
    <none>          Run all tests
"
}

function build_tests() {
    echo "Testing container builds..."
    echo "-------------------------------------------------------------------"
    /bin/bash "${DIR}/update"
    echo "PASSED: Build completed successfully."
}

function editor_tests() {
    echo "Testing schema editor app..."
    echo "-------------------------------------------------------------------"
    docker-compose run --rm --no-deps editor test
    echo "PASSED: Schema editor app tests passed."

}

function git_tests() {
    # Fail build if any commit title in this branch contains these words
    echo "Making sure that all commits in this branch are clean..."
    echo "-------------------------------------------------------------------"
    if git log --oneline master.. | grep -wiE "fixup|squash|wip"
    then
        echo "FAILED: Illegal words in git commit:"
        echo
        echo $(git log --oneline master.. | grep -wiE "fixup|squash|wip")
        echo
        echo "Please squash these changes before merging."
        exit 1
    else
        echo "PASSED: Git commits are clean."
    fi
}

function all_tests() {
    echo "Running all tests..."
    echo "-------------------------------------------------------------------"
    build_tests
    echo "-------------------------------------------------------------------"
    editor_tests
    echo "-------------------------------------------------------------------"
    git_tests
    echo "-------------------------------------------------------------------"
    echo "PASSED: All tests passed."
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    if [ -z "$1" ]
    then
        # If no arguments are supplied, run app tests.
        all_tests
    else
        case "${1:-}" in
            -h|--help) usage ;;
            git)       git_tests ;;
            editor)    editor_tests ;;
            build)     build_tests ;;
            *)         all_tests ;;
        esac
    fi
fi
